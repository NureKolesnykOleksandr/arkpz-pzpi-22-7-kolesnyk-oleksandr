<?php
// === Рекомендація 1: Використовуйте зрозумілі імена змінних ===

// Поганий приклад
$ИмяПользователя = "John";  // Ім'я змінної російською
$validationdata = true;  // Відсутній camelCase

// Гарний приклад
$userName = "John";  // Імена змінних англійською
$validationData = true;  // Дотримано camelCase


// === Рекомендація 2: Дотримуйтеся правильного форматування відступів ===

// Поганий приклад
if($x > 10){
echo "X більше 10";
}

// Гарний приклад
if ($x > 10) {
    echo "X більше 10";  // Використано чотири пробіли
}


// === Рекомендація 3: Скорочуйте вкладеність ===

// Поганий приклад
if ($a > 0) {
    if ($b > 0) {
        if ($c > 0) {
            echo "Всі змінні більше нуля";
        }
    }
}

// Гарний приклад
if ($a > 0 && $b > 0 && $c > 0) {
    echo "Всі змінні більше нуля";  // Логіка спрощена
}


// === Рекомендація 4: Використовуйте чітке документування коду ===

// Поганий приклад
// Функція обробляє щось
function process() {
    // код функції
}

// Гарний приклад
/**
 * Обробляє вхідні дані та повертає результат
 *
 * @param int $input Вхідне значення
 * @return string
 */
function process($input) {
    // код функції
}


// === Рекомендація 5: Обмежуйте довжину рядків ===

// Поганий приклад
$veryLongString = "Це дуже довгий рядок, який перевищує обмеження в 120 символів, і його важко читати та відслідковувати під час редагування.";

// Гарний приклад
$veryLongString = "Це дуже довгий рядок, який перевищує обмеження в 120 символів, " .
    "і його важко читати та відслідковувати під час редагування.";


// === Рекомендація 6: Дотримуйтеся стандартів іменування класів та методів ===

// Поганий приклад
class userprofile {
    function getuserdata() {
        // код функції
    }
}

// Гарний приклад
class UserProfile {
    function getUserData() {
        // код функції
    }
}


// === Рекомендація 7: Форматуйте масиви правильно ===

// Поганий приклад
$array = array("ID" => 123, "Name" => "John", "Age" => 25);

// Гарний приклад
$array = array(
    'ID'    => 123,
    'Name'  => 'John',
    'Age'   => 25
);

?>
